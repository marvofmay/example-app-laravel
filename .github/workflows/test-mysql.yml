name: Testing with Mysql
on:
  push:
    branches: [ main ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    # Service container Mysql mysql
    services:
      # Label used to access the service container
      mysql:
        # Docker Hub image (also with version)
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: laravel_testing
        ## map the "external" 33306 port with the "internal" 3306
        ports:
          - 33306:3306
        # Set health checks to wait until mysql database has started (it takes some seconds to start)
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: [ '7.4' ]
        dependency-stability: [ prefer-stable ]

    name: P${{ matrix.php-versions }} - L${{ matrix.laravel }} - ${{ matrix.dependency-stability }} - ${{ matrix.operating-system}}

    steps:
      - uses: actions/checkout@v2
      
      - name: Install PHP versions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          
      - name: Get Composer Cache Directory 2
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
          
      - uses: actions/cache@v2
        id: actions-cache
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
            
      - name: Cache PHP dependencies
        uses: actions/cache@v2
        id: vendor-cache
        with:
          path: vendor
          key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}
        
      - name: Copy .env
        run: php -r "copy('.env.testing', '.env');"          
        
      - name: Install Dependencies
        if: steps.vendor-cache.outputs.cache-hit != 'true'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Install NPM dependencies
        run: npm install
        
      - name: Compile assets
        run: npm run prod

      - name: Generate key
        run: php artisan key:generate
        
      - name: Config clear
        run: php artisan config:clear                
        
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache        

      - name: Show Laravel versions
        run: php artisan --version
        
      - name: Show dir
        run: pwd
        
      - name: PHP Version
        run: php --version         
        
      - name: Run Migrations
        # Set environment
        env:
          DB_CONNECTION: mysql_testing
          DB_DATABASE: laravel_testing
          DB_PORT: 33306
          DB_USER: root

        run: php artisan migrate     
        
      - name: Run config clear   
        run: php artisan config:clear        
                
      - name: Run cache clear   
        run: php artisan cache:clear                       
                
      - name: Execute tests via Laravel
        env:
          DB_CONNECTION: mysql_testing
          DB_HOST: 127.0.0.1
          DB_DATABASE: laravel_testing
          DB_PORT: 3306
          DB_USERNAME: root     
          
        run: php artisan test





